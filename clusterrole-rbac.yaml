#RBAC in kubernetes : Eg: Create Ramesh user for expense project and add some admin access to ramesh for expense project.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: expense-trainee
  namespace: expense
rules:
- apiGroups: [""]
  resources: ["pods"]   #only pods previleges to trainee suresh (reources  --Nouns)
  verbs: ["get", "watch", "list"]   #actions (verbs) 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: expense-trainee
  namespace: expense
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: expense-trainee
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: suresh
---
#ADD ramesh user here
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: expense-admin
  namespace: expense
rules:
- apiGroups: ["*"]  #giving all access to ramesh user
  resources: ["*"]   #only pods previleges to trainee suresh (reources  --Nouns)
  verbs: ["*"]   #actions (verbs) 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: expense-admin
  namespace: expense
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: expense-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: ramesh
---
#clusterRole and clusterrolebinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: expense
  namespace: expense
rules:
- apiGroups: [""]
  resources: ["nodes", "persistentvolumes", "namespaces"]   #only pods previleges to trainee suresh (reources  --Nouns)
  verbs: ["get", "watch", "list"]   #actions (verbs) 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: expense
subjects:
- kind: User
  name: ramesh
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: expense
  apiGroup: rbac.authorization.k8s.io